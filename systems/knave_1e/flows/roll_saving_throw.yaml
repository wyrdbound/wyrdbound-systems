id: roll_saving_throw
type: flow
name: "Roll Saving Throw"
description: "Roll a saving throw versus a fixed DC (usually 15)"
version: "1.0"

inputs:
  - type: str
    id: saving_throw_type
    enum: ["basic", "advantage", "disadvantage"]
  - type: str
    id: saving_throw_dc
    description: "The difficulty class for the saving throw"
  - type: str
    id: saving_throw_modifier
    description: "The modifier to apply to the saving throw"
outputs:
  - type: bool
    id: saving_throw_result
    description: "Whether the saving throw was successful"

variables:
  - type: str
    id: base_dice_roll
    description: "The base dice roll to use for the saving throw"
  - type: roll_result
    id: saving_throw_result
    description: "The result of the saving throw roll"

steps:
  - id: "determine_dice_roll"
    name: "Determine Saving Throw Type"
    type: "conditional"
    if: "{{ inputs.saving_throw_type == 'basic' }}"
    then:
      # Basic
      - set_value:
          path: "variables.base_dice_roll"
          value: 1d20
    else:
      if: "{{ inputs.saving_throw_type == 'advantage' }}"
      then:
        # Advantage
        - set_value:
            path: "variables.base_dice_roll"
            value: 2d20kh1
      else:
        # Disadvantage
        - set_value:
            path: "variables.base_dice_roll"
            value: 2d20kl1
    result_message: "Selected {{ inputs.saving_throw_type }} dice ({{ variables.base_dice_roll }})"

  - id: execute_saving_throw_roll
    type: dice_roll
    roll: "{{ variables.base_dice_roll }} + {{ inputs.saving_throw_modifier }}"
    actions:
      - set_value:
          path: "variables.saving_throw_result"
          value: "{{ result }}"
      - log_message:
          message: "Rolled {{ result.description }} for saving throw"
    result_message: "Rolled {{ result.total }} vs DC {{ inputs.saving_throw_dc }}"

  - id: evaluate_saving_throw_result
    name: "Evaluate Saving Throw Result"
    type: "completion"
    result_message: "Saving throw complete - {% if outputs.saving_throw_result %}Success{% else %}Failure{% endif %}"
    actions:
      - set_value:
          path: "outputs.saving_throw_result"
          value: "{{ variables.saving_throw_result.total > inputs.saving_throw_dc }}"
