kind: model
id: character
name: "Knave"
description: "Character model for Knave (1st Edition)"
version: 1
attributes:
  name: { type: str }
  gender: { type: str, enum: ["female", "male", "non-binary"] }

  # --- abilities ---
  abilities:
    strength:
      bonus: { type: int, range: 1..10 }
      defense: { type: int, derived: "10 + $.abilities.strength.bonus" }
    dexterity:
      bonus: { type: int, range: 1..10 }
      defense: { type: int, derived: "10 + $.abilities.dexterity.bonus" }
    constitution:
      bonus: { type: int, range: 1..10 }
      defense: { type: int, derived: "10 + $.abilities.constitution.bonus" }
    intelligence:
      bonus: { type: int, range: 1..10 }
      defense: { type: int, derived: "10 + $.abilities.intelligence.bonus" }
    wisdom:
      bonus: { type: int, range: 1..10 }
      defense: { type: int, derived: "10 + $.abilities.wisdom.bonus" }
    charisma:
      bonus: { type: int, range: 1..10 }
      defense: { type: int, derived: "10 + $.abilities.charisma.bonus" }

  xp: { type: int, default: 0, range: "0..1000" }
  level: { type: int, default: 1, range: "1..10" }

  hit_points:
    max: { type: int }
    current: { type: int, range: "0..$hit_points.max" } # track current

  armor:
    bonus: { type: int, range: "0..10" }
    defense: { type: int, derived: "10 + $.armor.bonus" }

  exploration_speed: { type: int, default: 120, range: "0..240" } # in feet
  combat_speed: { type: int, default: 40, range: "0..160" } # in feet

  copper: { type: int, default: 0, range: "0.." }

  # --- traits ---
  traits:
    physique: { type: str }
    face: { type: str }
    skin: { type: str }
    hair: { type: str }
    clothing: { type: str }
    virtue: { type: str }
    vice: { type: str }
    speech: { type: str }
    background: { type: str }
    misfortunes: { type: str }
    alignment: { type: str }

  # --- inventory system ---
  inventory_capacity: { type: int, derived: "$.abilities.constitution.defense" }
  inventory: { type: list, of: item }
  slots_used:
    { type: int, derived: "$.inventory | map(attribute='slot_cost') | sum" }

validations:
  - expression: "$.hit_points.current <= $.hit_points.max"
    message: "Current HP cannot exceed maximum HP"
  - expression: "$.slots_used <= $.inventory_capacity"
    message: "Item slots used cannot exceed inventory capacity"
